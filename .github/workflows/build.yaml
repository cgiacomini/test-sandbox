name: Python application test with GitHub Actions

on:
  push:
    branches:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Login to GitHub registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save Docker Image
        run: |
          docker save -o ./docker-image.tar ${{ steps.meta.outputs.tags }}

      - name: Create GitHub Release with Asset
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          tag: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
          artifacts: "./docker-image.tar"
          artifactContentType: "application/x-tar"

      - name: Run Docker Container
        run: |
          docker run -d -p 8080:8080 ${{ steps.meta.outputs.tags }}

      - name: Wait for Container to Start
        run: sleep 10

      - name: Test Docker Container
        run: |
          curl http://localhost:8080
