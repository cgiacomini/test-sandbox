name: Python application test with Github Actions

on:
  push:
    branches:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Login to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: myimage:latest
          outputs: type=docker,dest=/tmp/myimage.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/myimage.tar

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a      
          docker run -d -p 8080:8080 myimage

      - name: Wait for Container to Start
        run: sleep 10  # Adjust as needed, waiting for the container to start

      - name: Test Docker Container
        run: |
          curl http://localhost:8080  # Adjust URL and port based on your application

  push:
    needs: test
    runs-on: ubuntu-latest
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: myimage
        path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Push Docker image with SHA tag
        uses: ./.github/actions/push-image-sha
        with:
          registry: ${{ env.REGISTRY }}
          image_name: ${{ env.IMAGE_NAME }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACCESS_TOKEN }}k
